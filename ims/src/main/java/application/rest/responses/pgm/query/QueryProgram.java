
/**
* This program and the accompanying materials are made available under the terms of the
* Eclipse Public License v2.0 which accompanies this distribution, and is available at
* https://www.eclipse.org/legal/epl-v20.html
*
* SPDX-License-Identifier: EPL-2.0
*
* Copyright IBM Corporation 2019
*/

package application.rest.responses.pgm.query;

import java.lang.reflect.Field;

import io.swagger.v3.oas.annotations.media.Schema;

@Schema(description = "POJO from a Query PGM command that represents output for one program")
public class QueryProgram {

	@Schema(description = "BMP type. The output is returned from the local IMS.")
	String bmpt;
	@Schema(description = "Completion Code")
	String cc;
	@Schema(description = "Completion code text that briefly explains the meaning of the non-zero completion code.")
	String cctxt;
	@Schema(description = "Database referenced by the program.")
	String db;
	@Schema(description = "Definition type")
	String dfnt;
	@Schema(description = "Dynamic option (Y) or not (N). The output is returned from the local IMS.")
	String dopt;
	@Schema(description = "Indicates whether the program has been exported to the IMSRSC repository.")
	String expn;
	@Schema(description = "Fast Path exclusive program (E) or not (N). The output is returned from the local IMS.")
	String fp;
	@Schema(description = "Generated PSB generated by IMS (Y) or not (N). The output is returned from the local IMS.")
	String gpsb;
	@Schema(description = "Returns from the repository the IMSIDs that have the resource defined.")
	String imsid;
	@Schema(description = "Language interface. The output is returned from the local IMS.")
	String lang;
	@Schema(description = "Local application program status.")
	String lstt;
	@Schema(description = "Local runtime value of the resident option. Indicates whether the program PSB resides in local storage.")
	String lrsdnt;
	@Schema(description = "IMSplex member that build the output line.")
	String mbr;
	@Schema(description = "Model name. Name of the resource used as a model to create this resource. DFSDSPG1 is the IMS descriptor name for programs.")
	String mdln;
	@Schema(description = "Model type, either RSC or DESC. RSC means that the resource was created using another resource as a model. DESC means that the resource was created using a descriptor as a model.")
	String mdlt;
	@Schema(description = "Program name that references the database.")
	String pgm;
	@Schema(description = "BMP type. The output is returned from the repository.")
	String rbmpt;
	@Schema(description = "Dynamic option (Y) or not (N). The output is returned from the repository.")
	String rdopt;
	@Schema(description = "Indicates whether the line shows the stored resource definitions.")
	String repo;
	@Schema(description = "	Fast Path exclusive program (E) or not (N). The output is returned from the repository.")
	String rfp;
	@Schema(description = "Region type in which program can run. Some programs can run in additional region types. For example, a program defined with a program type of MSG can run in a BMP under certain conditions.")
	String rgnt;
	@Schema(description = "Language interface. The output is returned from the repository.")
	String rlang;
	@Schema(description = "Resident value from the repository.")
	String rrsdnt;
	@Schema(description = "Region type in which program can run. The output is returned from the repository.")
	String rrgnt;
	@Schema(description = "Schedule type. The output is returned from the repository.")
	String rschd;
	@Schema(description = "Local deferred resident value that takes effect at the next IMS restart. A value of Y is shown if a program was defined as resident but could not be made resident at IMS restart time because no ACB existed for the PSB. This program can become resident during the next IMS restart only if there is an ACB for the PSB in the ACBLIB or IMS catalog.")
	String rsdnt;
	@Schema(description = "Routing code associated with the program.")
	String rtc;
	@Schema(description = "	Transaction level statistics logged (Y) or not (N). The output is returned from the repository.")
	String rtls;
	@Schema(description = "Create time from the repository. This is the time the resource was first created in the repository.")
	String rtmcr;
	@Schema(description = "Update time from the repository. This is the time the resource was last updated in the repository.")
	String rtmup;
	@Schema(description = "	Schedule type. The output is returned from the local IMS.")
	String schd;
	@Schema(description = "Transaction")
	String tls;
	@Schema(description = "The time that the resource was last accessed. The last access time is retained across warm start, emergency restart, EXPORT and IMPORT. The updating of the last access time is not logged. After a restart, the last access time reflects the time recorded in the restart checkpoint log records.")
	String tmac;
	@Schema(description = "The time that the resource was created with a CREATE PGM command, an IMPORT command that creates the program, or IMS initialization. The create time is retained across warm start, emergency restart, EXPORT and IMPORT. The output is returned from the local IMS")
	String tmcr;
	@Schema(description = "The time that the resource was last imported, if applicable. The import time is retained across warm start and emergency restart. The output is returned from the local IMS.")
	String tmim;
	@Schema(description = "The last time the attributes of the runtime resource definition were updated as a result of the UPDATE PGM command or the IMPORT command. The update time is retained across warm start and emergency restart. The output value is obtained from the local IMS.")
	String tmup;
	@Schema(description = "Transaction associated with the program.")
	String tran;
	@Schema(description = "Work is in progress for the program or one of its associated resources. ")
	String wrk;
	

	public String getBmpt() {
		return bmpt;
	}

	public void setBmpt(String bmpt) {
		this.bmpt = bmpt;
	}

	public String getCc() {
		return cc;
	}

	public void setCc(String cc) {
		this.cc = cc;
	}

	public String getCctxt() {
		return cctxt;
	}

	public void setCctxt(String cctxt) {
		this.cctxt = cctxt;
	}

	public String getDb() {
		return db;
	}

	public void setDb(String db) {
		this.db = db;
	}

	public String getDfnt() {
		return dfnt;
	}

	public void setDfnt(String dfnt) {
		this.dfnt = dfnt;
	}

	public String getDopt() {
		return dopt;
	}

	public void setDopt(String dopt) {
		this.dopt = dopt;
	}

	public String getExpn() {
		return expn;
	}

	public void setExpn(String expn) {
		this.expn = expn;
	}

	public String getFp() {
		return fp;
	}

	public void setFp(String fp) {
		this.fp = fp;
	}

	public String getGpsb() {
		return gpsb;
	}





	public void setGpsb(String gpsb) {
		this.gpsb = gpsb;
	}





	public String getImsid() {
		return imsid;
	}





	public void setImsid(String imsid) {
		this.imsid = imsid;
	}





	public String getLang() {
		return lang;
	}





	public void setLang(String lang) {
		this.lang = lang;
	}





	public String getLstt() {
		return lstt;
	}





	public void setLstt(String lstt) {
		this.lstt = lstt;
	}





	public String getLrsdnt() {
		return lrsdnt;
	}





	public void setLrsdnt(String lrsdnt) {
		this.lrsdnt = lrsdnt;
	}





	public String getMbr() {
		return mbr;
	}





	public void setMbr(String mbr) {
		this.mbr = mbr;
	}





	public String getMdln() {
		return mdln;
	}





	public void setMdln(String mdln) {
		this.mdln = mdln;
	}





	public String getMdlt() {
		return mdlt;
	}





	public void setMdlt(String mdlt) {
		this.mdlt = mdlt;
	}





	public String getPgm() {
		return pgm;
	}





	public void setPgm(String pgm) {
		this.pgm = pgm;
	}





	public String getRbmpt() {
		return rbmpt;
	}





	public void setRbmpt(String rbmpt) {
		this.rbmpt = rbmpt;
	}





	public String getRdopt() {
		return rdopt;
	}





	public void setRdopt(String rdopt) {
		this.rdopt = rdopt;
	}





	public String getRepo() {
		return repo;
	}





	public void setRepo(String repo) {
		this.repo = repo;
	}





	public String getRfp() {
		return rfp;
	}





	public void setRfp(String rfp) {
		this.rfp = rfp;
	}





	public String getRgnt() {
		return rgnt;
	}





	public void setRgnt(String rgnt) {
		this.rgnt = rgnt;
	}





	public String getRlang() {
		return rlang;
	}





	public void setRlang(String rlang) {
		this.rlang = rlang;
	}





	public String getRrsdnt() {
		return rrsdnt;
	}





	public void setRrsdnt(String rrsdnt) {
		this.rrsdnt = rrsdnt;
	}





	public String getRrgnt() {
		return rrgnt;
	}





	public void setRrgnt(String rrgnt) {
		this.rrgnt = rrgnt;
	}





	public String getRschd() {
		return rschd;
	}





	public void setRschd(String rschd) {
		this.rschd = rschd;
	}





	public String getRsdnt() {
		return rsdnt;
	}





	public void setRsdnt(String rsdnt) {
		this.rsdnt = rsdnt;
	}





	public String getRtc() {
		return rtc;
	}





	public void setRtc(String rtc) {
		this.rtc = rtc;
	}





	public String getRtls() {
		return rtls;
	}





	public void setRtls(String rtls) {
		this.rtls = rtls;
	}





	public String getRtmcr() {
		return rtmcr;
	}





	public void setRtmcr(String rtmcr) {
		this.rtmcr = rtmcr;
	}





	public String getRtmup() {
		return rtmup;
	}





	public void setRtmup(String rtmup) {
		this.rtmup = rtmup;
	}





	public String getSchd() {
		return schd;
	}





	public void setSchd(String schd) {
		this.schd = schd;
	}





	public String getTls() {
		return tls;
	}





	public void setTls(String tls) {
		this.tls = tls;
	}





	public String getTmac() {
		return tmac;
	}





	public void setTmac(String tmac) {
		this.tmac = tmac;
	}





	public String getTmcr() {
		return tmcr;
	}





	public void setTmcr(String tmcr) {
		this.tmcr = tmcr;
	}





	public String getTmim() {
		return tmim;
	}





	public void setTmim(String tmim) {
		this.tmim = tmim;
	}





	public String getTmup() {
		return tmup;
	}





	public void setTmup(String tmup) {
		this.tmup = tmup;
	}





	public String getTran() {
		return tran;
	}





	public void setTran(String tran) {
		this.tran = tran;
	}





	public String getWrk() {
		return wrk;
	}





	public void setWrk(String wrk) {
		this.wrk = wrk;
	}





	@Override
	public String toString() {
		StringBuilder result = new StringBuilder();
		String newLine = System.getProperty("line.separator");

		result.append(newLine);

		//determine fields declared in this class only (no fields of superclass)
		Field[] fields = this.getClass().getDeclaredFields();

		//print field names paired with their values
		for ( Field field : fields  ) {
			result.append("  ");
			try {
				result.append( field.getName() );
				result.append(": ");
				//requires access to private field:
				result.append( field.get(this) );
			} catch ( IllegalAccessException ex ) {
				System.out.println(ex);
			}
			result.append(newLine);
		}
		return result.toString();
	}

}
